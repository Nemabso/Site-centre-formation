{"ast":null,"code":"// import {Alert} from 'react-native';\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, SET_AUTH_TOKEN, SET_CURRENT_USER, LOGOUT_USER } from \"../Actions/loginActions\"; // init state for login\n\nconst initState = {\n  isLoading: false,\n  isAuth: false,\n  loginData: {},\n  errMsg: \"\",\n  authToken: AsyncStorage.getItem(\"token\"),\n  userDetails: AsyncStorage.getItem(\"Id\"),\n  valueAuth: 0\n};\n\nconst loginReducer = (state = initState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return { ...state,\n        isLoading: true\n      };\n\n    case LOGIN_SUCCESS:\n      AsyncStorage.setItem(\"token\", action.payload.token);\n      AsyncStorage.setItem(\"Id\", action.payload.id);\n      return {\n        isAuth: true,\n        isLoading: false,\n        loginData: action.payload,\n        errMsg: \"\",\n        authToken: action.payload.token,\n        userDetails: action.payload.id\n      };\n\n    case LOGIN_FAILURE:\n      AsyncStorage.removeItem(\"token\");\n      return {\n        isLoading: false,\n        isAuth: false,\n        loginData: {},\n        errMsg: action.payload\n      };\n\n    case SET_CURRENT_USER:\n      return { ...state,\n        userDetails: action.payload,\n        isAuth: true\n      };\n\n    case LOGOUT_USER:\n      return { ...state,\n        isAuth: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;","map":{"version":3,"sources":["/Users/mactouda/stage2A/SiteFormation/src/Reducers/loginReducer.js"],"names":["AsyncStorage","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SET_AUTH_TOKEN","SET_CURRENT_USER","LOGOUT_USER","initState","isLoading","isAuth","loginData","errMsg","authToken","getItem","userDetails","valueAuth","loginReducer","state","action","type","setItem","payload","token","id","removeItem"],"mappings":"AAAA;AACA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,cAJF,EAKEC,gBALF,EAMEC,WANF,QAOO,yBAPP,C,CASA;;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE,KADK;AAEhBC,EAAAA,MAAM,EAAE,KAFQ;AAGhBC,EAAAA,SAAS,EAAE,EAHK;AAIhBC,EAAAA,MAAM,EAAE,EAJQ;AAKhBC,EAAAA,SAAS,EAAEZ,YAAY,CAACa,OAAb,CAAqB,OAArB,CALK;AAMhBC,EAAAA,WAAW,EAAEd,YAAY,CAACa,OAAb,CAAqB,IAArB,CANG;AAOhBE,EAAAA,SAAS,EAAC;AAPM,CAAlB;;AAUA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGV,SAAT,EAAoBW,MAApB,KAA+B;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,aAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELT,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKN,aAAL;AACEF,MAAAA,YAAY,CAACoB,OAAb,CAAqB,OAArB,EAA8BF,MAAM,CAACG,OAAP,CAAeC,KAA7C;AACAtB,MAAAA,YAAY,CAACoB,OAAb,CAAqB,IAArB,EAA2BF,MAAM,CAACG,OAAP,CAAeE,EAA1C;AAEA,aAAO;AACLd,QAAAA,MAAM,EAAE,IADH;AAELD,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,SAAS,EAAEQ,MAAM,CAACG,OAHb;AAILV,QAAAA,MAAM,EAAE,EAJH;AAKLC,QAAAA,SAAS,EAAEM,MAAM,CAACG,OAAP,CAAeC,KALrB;AAMLR,QAAAA,WAAW,EAAEI,MAAM,CAACG,OAAP,CAAeE;AANvB,OAAP;;AAQF,SAAKpB,aAAL;AACEH,MAAAA,YAAY,CAACwB,UAAb,CAAwB,OAAxB;AACA,aAAO;AACLhB,QAAAA,SAAS,EAAE,KADN;AAELC,QAAAA,MAAM,EAAE,KAFH;AAGLC,QAAAA,SAAS,EAAE,EAHN;AAILC,QAAAA,MAAM,EAAEO,MAAM,CAACG;AAJV,OAAP;;AAMF,SAAKhB,gBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELH,QAAAA,WAAW,EAAEI,MAAM,CAACG,OAFf;AAGLZ,QAAAA,MAAM,EAAE;AAHH,OAAP;;AAKF,SAAKH,WAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELR,QAAAA,MAAM,EAAE;AAFH,OAAP;;AAIF;AACE,aAAOQ,KAAP;AAtCJ;AAwCD,CAzCD;;AA2CA,eAAeD,YAAf","sourcesContent":["// import {Alert} from 'react-native';\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  SET_AUTH_TOKEN,\n  SET_CURRENT_USER,\n  LOGOUT_USER,\n} from \"../Actions/loginActions\";\n\n// init state for login\nconst initState = {\n  isLoading: false,\n  isAuth: false,\n  loginData: {},\n  errMsg: \"\",\n  authToken: AsyncStorage.getItem(\"token\"),\n  userDetails: AsyncStorage.getItem(\"Id\"),\n  valueAuth:0,\n};\n\nconst loginReducer = (state = initState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case LOGIN_SUCCESS:\n      AsyncStorage.setItem(\"token\", action.payload.token);\n      AsyncStorage.setItem(\"Id\", action.payload.id);\n\n      return {\n        isAuth: true,\n        isLoading: false,\n        loginData: action.payload,\n        errMsg: \"\",\n        authToken: action.payload.token,\n        userDetails: action.payload.id,\n      };\n    case LOGIN_FAILURE:\n      AsyncStorage.removeItem(\"token\");\n      return {\n        isLoading: false,\n        isAuth: false,\n        loginData: {},\n        errMsg: action.payload,\n      };\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        userDetails: action.payload,\n        isAuth: true,\n      };\n    case LOGOUT_USER:\n      return {\n        ...state,\n        isAuth: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;"]},"metadata":{},"sourceType":"module"}