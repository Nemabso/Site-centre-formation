{"ast":null,"code":"// import {Alert} from 'react-native';\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, SET_AUTH_TOKEN, SET_CURRENT_USER, LOGOUT_USER, SET_VALUE_AUTH, SET_IS_AUTH } from \"../Actions/loginActions\"; // init state for login\n\nconst initState = {\n  isLoading: false,\n  isAuth: false,\n  loginData: {},\n  errMsg: \"\",\n  userId: \"\",\n  valueAuth: 0,\n  admin: false\n};\n\nconst loginReducer = (state = initState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return { ...state,\n        isLoading: true\n      };\n\n    case LOGIN_SUCCESS:\n      return {\n        isAuth: true,\n        isLoading: false,\n        loginData: action.payload,\n        errMsg: \"\",\n        userId: action.payload.id,\n        admin: action.payload.id\n      };\n\n    case LOGIN_FAILURE:\n      AsyncStorage.removeItem(\"token\");\n      return {\n        isLoading: false,\n        isAuth: false,\n        loginData: {},\n        errMsg: action.payload\n      };\n\n    case SET_CURRENT_USER:\n      return { ...state,\n        userDetails: action.payload,\n        isAuth: true\n      };\n\n    case SET_VALUE_AUTH:\n      return { ...state,\n        valueAuth: action.payload\n      };\n\n    case SET_IS_AUTH:\n      return { ...state,\n        isAuth: false\n      };\n\n    case LOGOUT_USER:\n      return { ...state,\n        isAuth: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;","map":{"version":3,"sources":["/Users/mactouda/stage2A/SiteFormation/src/Reducers/loginReducer.js"],"names":["AsyncStorage","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SET_AUTH_TOKEN","SET_CURRENT_USER","LOGOUT_USER","SET_VALUE_AUTH","SET_IS_AUTH","initState","isLoading","isAuth","loginData","errMsg","userId","valueAuth","admin","loginReducer","state","action","type","payload","id","removeItem","userDetails"],"mappings":"AAAA;AACA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,cAJF,EAKEC,gBALF,EAMEC,WANF,EAOEC,cAPF,EAQEC,WARF,QASO,yBATP,C,CAWA;;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE,KADK;AAEhBC,EAAAA,MAAM,EAAE,KAFQ;AAGhBC,EAAAA,SAAS,EAAE,EAHK;AAIhBC,EAAAA,MAAM,EAAE,EAJQ;AAKhBC,EAAAA,MAAM,EAAE,EALQ;AAMhBC,EAAAA,SAAS,EAAE,CANK;AAOhBC,EAAAA,KAAK,EAAC;AAPU,CAAlB;;AAUA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGT,SAAT,EAAoBU,MAApB,KAA+B;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKnB,aAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELR,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKR,aAAL;AAGE,aAAO;AACLS,QAAAA,MAAM,EAAE,IADH;AAELD,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,SAAS,EAAEO,MAAM,CAACE,OAHb;AAILR,QAAAA,MAAM,EAAE,EAJH;AAKLC,QAAAA,MAAM,EAAEK,MAAM,CAACE,OAAP,CAAeC,EALlB;AAMLN,QAAAA,KAAK,EAACG,MAAM,CAACE,OAAP,CAAeC;AANhB,OAAP;;AAQF,SAAKnB,aAAL;AACEH,MAAAA,YAAY,CAACuB,UAAb,CAAwB,OAAxB;AACA,aAAO;AACLb,QAAAA,SAAS,EAAE,KADN;AAELC,QAAAA,MAAM,EAAE,KAFH;AAGLC,QAAAA,SAAS,EAAE,EAHN;AAILC,QAAAA,MAAM,EAAEM,MAAM,CAACE;AAJV,OAAP;;AAMF,SAAKhB,gBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELM,QAAAA,WAAW,EAAEL,MAAM,CAACE,OAFf;AAGLV,QAAAA,MAAM,EAAE;AAHH,OAAP;;AAKF,SAAKJ,cAAL;AACE,aAAO,EACL,GAAGW,KADE;AAEJH,QAAAA,SAAS,EAAEI,MAAM,CAACE;AAFd,OAAP;;AAIA,SAAKb,WAAL;AACA,aAAO,EACL,GAAGU,KADE;AAEJP,QAAAA,MAAM,EAAE;AAFJ,OAAP;;AAIF,SAAKL,WAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELP,QAAAA,MAAM,EAAE;AAFH,OAAP;;AAIF;AACE,aAAOO,KAAP;AA/CJ;AAiDD,CAlDD;;AAoDA,eAAeD,YAAf","sourcesContent":["// import {Alert} from 'react-native';\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  SET_AUTH_TOKEN,\n  SET_CURRENT_USER,\n  LOGOUT_USER,\n  SET_VALUE_AUTH,\n  SET_IS_AUTH\n} from \"../Actions/loginActions\";\n\n// init state for login\nconst initState = {\n  isLoading: false,\n  isAuth: false,\n  loginData: {},\n  errMsg: \"\",\n  userId: \"\",\n  valueAuth: 0,\n  admin:false,\n};\n\nconst loginReducer = (state = initState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case LOGIN_SUCCESS:\n      \n\n      return {\n        isAuth: true,\n        isLoading: false,\n        loginData: action.payload,\n        errMsg: \"\",\n        userId: action.payload.id,\n        admin:action.payload.id,\n      };\n    case LOGIN_FAILURE:\n      AsyncStorage.removeItem(\"token\");\n      return {\n        isLoading: false,\n        isAuth: false,\n        loginData: {},\n        errMsg: action.payload,\n      };\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        userDetails: action.payload,\n        isAuth: true,\n      };\n    case SET_VALUE_AUTH:\n      return {\n        ...state,\n         valueAuth: action.payload,\n      };\n      case SET_IS_AUTH:\n      return {\n        ...state,\n         isAuth: false,\n      };\n    case LOGOUT_USER:\n      return {\n        ...state,\n        isAuth: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;"]},"metadata":{},"sourceType":"module"}