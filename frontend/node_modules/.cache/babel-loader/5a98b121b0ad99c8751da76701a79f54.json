{"ast":null,"code":"import AsyncStorage from \"@react-native-community/async-storage\";\nimport axios from \"axios\"; //import swal from \"sweetalert\";\n//import { tokenConfig } from \"./AuthActions\";\n// action types\n\nexport const SIGNUP_REQUEST = \"SIGNUP_REQUEST\";\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nexport const SIGNUP_FAILURE = \"SIGNUP_FAILURE\";\nimport { baseURL } from \"../constants\"; // action creators\n\nexport const signupRequest = () => {\n  return {\n    type: SIGNUP_REQUEST\n  };\n};\nexport const signupSuccess = signupData => {\n  return {\n    type: SIGNUP_SUCCESS,\n    payload: signupData\n  };\n};\nexport const signupFailure = errMsg => {\n  return {\n    type: SIGNUP_FAILURE,\n    payload: errMsg\n  };\n}; // async impure action creator enabled by redux-thunk\n\nexport const signup = signupData => {\n  return dispatch => {\n    dispatch(signupRequest());\n    axios({\n      method: \"post\",\n      url: \"/register\",\n      baseURL: baseURL,\n      data: {\n        name: signupData.name,\n        username: signupData.username,\n        email: signupData.email,\n        password: signupData.password\n      } //headers: {\n      // \"auth-token\": AsyncStorage.getItem(\"token\"),\n      //},\n\n    }).then(res => {\n      if (res.data.value) {\n        dispatch(signupSuccess(signupData));\n      } else {\n        dispatch(signupFailure(res.data.message));\n      }\n    }).catch(err => {\n      dispatch(signupFailure(err.response.data.message));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mactouda/stage2A/SiteFormation/src/Actions/signupActions.js"],"names":["AsyncStorage","axios","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","baseURL","signupRequest","type","signupSuccess","signupData","payload","signupFailure","errMsg","signup","dispatch","method","url","data","name","username","email","password","then","res","value","message","catch","err","response"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,SAASC,OAAT,QAAwB,cAAxB,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEL;AADD,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMM,aAAa,GAAIC,UAAD,IAAgB;AAC3C,SAAO;AACLF,IAAAA,IAAI,EAAEJ,cADD;AAELO,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,MAAME,aAAa,GAAIC,MAAD,IAAY;AACvC,SAAO;AACLL,IAAAA,IAAI,EAAEH,cADD;AAELM,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMC,MAAM,GAAIJ,UAAD,IAAgB;AACpC,SAAQK,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AAEAL,IAAAA,KAAK,CAAC;AACJc,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAE,WAFD;AAGJX,MAAAA,OAAO,EAAEA,OAHL;AAIJY,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAET,UAAU,CAACS,IADb;AAEJC,QAAAA,QAAQ,EAAEV,UAAU,CAACU,QAFjB;AAGJC,QAAAA,KAAK,EAAEX,UAAU,CAACW,KAHd;AAIJC,QAAAA,QAAQ,EAAEZ,UAAU,CAACY;AAJjB,OAJF,CAWJ;AACC;AACD;;AAbI,KAAD,CAAL,CAeGC,IAfH,CAeSC,GAAD,IAAS;AACb,UAAIA,GAAG,CAACN,IAAJ,CAASO,KAAb,EAAoB;AAClBV,QAAAA,QAAQ,CAACN,aAAa,CAACC,UAAD,CAAd,CAAR;AACD,OAFD,MAEO;AAELK,QAAAA,QAAQ,CAACH,aAAa,CAACY,GAAG,CAACN,IAAJ,CAASQ,OAAV,CAAd,CAAR;AACD;AACF,KAtBH,EAuBGC,KAvBH,CAuBUC,GAAD,IAAS;AAEdb,MAAAA,QAAQ,CAACH,aAAa,CAACgB,GAAG,CAACC,QAAJ,CAAaX,IAAb,CAAkBQ,OAAnB,CAAd,CAAR;AACD,KA1BH;AA2BD,GA9BD;AA+BD,CAhCM","sourcesContent":["import AsyncStorage from \"@react-native-community/async-storage\";\nimport axios from \"axios\";\n//import swal from \"sweetalert\";\n//import { tokenConfig } from \"./AuthActions\";\n// action types\nexport const SIGNUP_REQUEST = \"SIGNUP_REQUEST\";\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nexport const SIGNUP_FAILURE = \"SIGNUP_FAILURE\";\nimport { baseURL } from \"../constants\";\n\n// action creators\nexport const signupRequest = () => {\n  return {\n    type: SIGNUP_REQUEST,\n  };\n};\nexport const signupSuccess = (signupData) => {\n  return {\n    type: SIGNUP_SUCCESS,\n    payload: signupData,\n  };\n};\nexport const signupFailure = (errMsg) => {\n  return {\n    type: SIGNUP_FAILURE,\n    payload: errMsg,\n  };\n};\n\n// async impure action creator enabled by redux-thunk\nexport const signup = (signupData) => {\n  return (dispatch) => {\n    dispatch(signupRequest());\n    \n    axios({\n      method: \"post\",\n      url: \"/register\",\n      baseURL: baseURL,\n      data: {\n        name: signupData.name,\n        username: signupData.username,\n        email: signupData.email,\n        password: signupData.password,\n      },\n\n      //headers: {\n       // \"auth-token\": AsyncStorage.getItem(\"token\"),\n      //},\n    })\n      .then((res) => {\n        if (res.data.value) {\n          dispatch(signupSuccess(signupData));\n        } else {\n          \n          dispatch(signupFailure(res.data.message));\n        }\n      })\n      .catch((err) => {\n      \n        dispatch(signupFailure(err.response.data.message));\n      });\n  };\n};"]},"metadata":{},"sourceType":"module"}