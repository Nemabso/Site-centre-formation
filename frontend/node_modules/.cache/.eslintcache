[{"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\index.js":"1","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\history.js":"2","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Reducers\\loginReducer.js":"4","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Reducers\\signupReducer.js":"5","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\App.jsx":"6","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Actions\\signupActions.js":"7","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Actions\\loginActions.js":"8","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\constants\\constants.js":"9","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\constants\\index.js":"10","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Components\\Navigation.jsx":"11","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Components\\Welcome.jsx":"12","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Components\\Registering.jsx":"13","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Components\\TrainerSpace.jsx":"14","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Components\\Listformations.jsx":"15","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Components\\AddFormation.jsx":"16","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Components\\Footer.jsx":"17"},{"size":1595,"mtime":1639068030051,"results":"18","hashOfConfig":"19"},{"size":99,"mtime":1638789752266,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1638789752269,"results":"21","hashOfConfig":"19"},{"size":2168,"mtime":1639059110222,"results":"22","hashOfConfig":"19"},{"size":919,"mtime":1638789752197,"results":"23","hashOfConfig":"19"},{"size":921,"mtime":1639059940775,"results":"24","hashOfConfig":"19"},{"size":1685,"mtime":1639058948828,"results":"25","hashOfConfig":"19"},{"size":3815,"mtime":1638964683362,"results":"26","hashOfConfig":"19"},{"size":47,"mtime":1638789752265,"results":"27","hashOfConfig":"19"},{"size":62,"mtime":1638789752266,"results":"28","hashOfConfig":"19"},{"size":1974,"mtime":1639068527276,"results":"29","hashOfConfig":"19"},{"size":6826,"mtime":1639058065286,"results":"30","hashOfConfig":"19"},{"size":3704,"mtime":1639068918350,"results":"31","hashOfConfig":"19"},{"size":14374,"mtime":1639069676689,"results":"32","hashOfConfig":"19"},{"size":15453,"mtime":1639058012839,"results":"33","hashOfConfig":"19"},{"size":7420,"mtime":1639058005468,"results":"34","hashOfConfig":"19"},{"size":2272,"mtime":1639069063520,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1mj5lgi",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\index.js",[],["72","73"],"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\history.js",[],"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Reducers\\loginReducer.js",[],"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Reducers\\signupReducer.js",[],"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\App.jsx",[],"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Actions\\signupActions.js",[],"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Actions\\loginActions.js",[],"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\constants\\constants.js",[],"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\constants\\index.js",[],"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Components\\Navigation.jsx",["74"],"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Components\\Welcome.jsx",[],"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Components\\Registering.jsx",["75"],"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Components\\TrainerSpace.jsx",["76","77","78"],"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Components\\Listformations.jsx",["79"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"../Styles/TrainerSpace.css\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import { Link } from \"react-router-dom\";\r\n// import backgroundImage from \"../assets/background.jpeg\";\r\n// import Image from \"react-bootstrap/Image\";\r\nimport logo from \"../assets/logoSite.jpeg\"\r\nimport { connect } from \"react-redux\";\r\nimport { BsGeoAlt, BsFillEnvelopeFill } from \"react-icons/bs\";\r\nimport { FiPhoneCall } from \"react-icons/fi\";\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../constants\";\r\n// import AddFormation from \"./AddFormation\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { login, setisauth, setisadmin, setlistvalue, setaddvalue } from \"../Actions/loginActions\";\r\n// import { setvalueauth } from \"../Actions/loginActions\";\r\n\r\n\r\nfunction Listformations(props) {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [formations, setFormations] = useState([]);\r\n    const [isChoosed, setIsChoosed] = useState(0);\r\n    const [currentFormation, setCurrentFormation] = useState({});\r\n    const [descriptionModified, setDescriptionModified] = useState(\"\");\r\n    const [linkModified, setLinkModified] = useState(\"\");\r\n    const [nameformationModified, setNameFormationModified] = useState(\"\");\r\n    // const didMountRef = useRef(false);\r\n    // const forceUpdate = React.useReducer(bool => !bool)[1];\r\n\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n\r\n        fetchUserDetails();\r\n\r\n\r\n    })\r\n    function ModifyFormation() {\r\n        axios({\r\n            method: \"post\",\r\n            url: \"/UpdateFormation\",\r\n            baseURL: baseURL,\r\n            data: {\r\n                userid: props.listvalue,\r\n                formationName: currentFormation.formationName,\r\n                link: currentFormation.link,\r\n                nameformationModified: nameformationModified,\r\n                descriptionModified: descriptionModified,\r\n                linkModified: linkModified,\r\n            },\r\n\r\n        })\r\n            .then((res) => {\r\n                // const message = res.data.message;\r\n\r\n                if (res.data.value) {\r\n                    alert(\"Formation a été modifiée !\");\r\n                    setCurrentFormation(\r\n                        {\r\n                            formationName: nameformationModified,\r\n                            description: descriptionModified,\r\n                            link: linkModified\r\n                        }\r\n\r\n                    )\r\n                    setIsChoosed(1);\r\n\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n\r\n    function DeleteFormation() {\r\n        axios({\r\n            method: \"post\",\r\n            url: \"/DeleteFormation\",\r\n            baseURL: baseURL,\r\n            data: {\r\n                userid: props.listvalue,\r\n                formationName: currentFormation.formationName,\r\n                link: currentFormation.link,\r\n            },\r\n\r\n        })\r\n            .then((res) => {\r\n                // const message = res.data.message;\r\n\r\n                if (res.data.value) {\r\n\r\n                    alert(\"Formation a été Supprimée !\");\r\n                    setIsChoosed(0);\r\n\r\n\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n    function fetchUserDetails() {\r\n        axios({\r\n            method: \"post\",\r\n            url: \"/getUserDetails\",\r\n            baseURL: baseURL,\r\n            data: {\r\n                userid: props.listvalue,\r\n            },\r\n\r\n        })\r\n            .then((res) => {\r\n\r\n                setName(res.data.results[0].name);\r\n                setFormations(res.data.results[0].formations)\r\n\r\n\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n    function nameHandler(event) {\r\n\r\n        setNameFormationModified(event.target.value)\r\n\r\n    }\r\n    function descriptionHandler(event) {\r\n\r\n        setDescriptionModified(event.target.value);\r\n\r\n    }\r\n    function linkHandler(event) {\r\n\r\n        setLinkModified(event.target.value);\r\n\r\n    }\r\n\r\n    const listFormations = () => {\r\n        if (isChoosed === 0) {\r\n            if (formations.length !== 0) {\r\n                return (\r\n                    formations.map((item) => (\r\n                        <div class=\"formDiv0\"  >\r\n                            <a href=\"###\" onClick={() => { setIsChoosed(1); setCurrentFormation(item) }}  >\r\n                                <div class=\"formDiv\" ><p class=\"formName\" >{item.formationName.toUpperCase()}</p>\r\n                                </div>\r\n\r\n\r\n                            </a>\r\n                        </div>\r\n                    ))\r\n                );\r\n            }\r\n            else {\r\n                return (\r\n                    <div class=\"formationTitle\">AUCUNE FORMATION</div>\r\n                )\r\n\r\n            }\r\n        }\r\n        else if (isChoosed === 2) {\r\n            return (\r\n                <div>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm={2} md={3}>\r\n\r\n                            </Col>\r\n                            <Col xs={12} sm={8} md={6}>\r\n                                <div class=\"adDiv\">\r\n                                    <p class=\"formationTitle\">MODIFIER LA FORMATION</p>\r\n                                    <p class=\"above\">NOM DE FORMATION</p>\r\n                                    <input class=\"inputAccount\"\r\n                                        defaultValue={currentFormation.formationName}\r\n                                        type=\"text\"\r\n                                        onChange={e => { nameHandler(e) }} />\r\n\r\n                                    <p class=\"above\">DESCRIPTION</p>\r\n                                    <textarea class=\"inputDescription\"\r\n                                        type=\"text\"\r\n                                        defaultValue={currentFormation.description}\r\n                                        onChange={event => descriptionHandler(event)} />\r\n\r\n                                    <p class=\"above\">LINK</p>\r\n                                    <input class=\"inputAccount\"\r\n                                        defaultValue={currentFormation.link}\r\n                                        onChange={event => linkHandler(event)} />\r\n\r\n\r\n\r\n                                    <a href=\"###\" onClick={() => ModifyFormation()}>\r\n                                        <div class=\"addButon\" >Modifier la formation</div></a>\r\n\r\n\r\n                                </div>\r\n                            </Col>\r\n                            <Col sm={2} md={3} >\r\n\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                    </Container>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={12} sm={2} md={3} >\r\n\r\n                            </Col>\r\n                            <Col sm={8} md={6}>\r\n                                <p class=\"formationTitle\">DÉTAILS DE LA FORMATION</p>\r\n                                <p class=\"detail\"> NOM: {currentFormation.formationName.toUpperCase()}</p>\r\n                                <p class=\"detail\"> DESCRIPTION: {currentFormation.description}</p>\r\n                                <div class=\"column2\">\r\n                                    <div\r\n                                        class=\"video\"\r\n                                        style={{\r\n                                            position: \"relative\",\r\n                                            paddingBottom: \"56.25%\" /* 16:9 */,\r\n                                            paddingTop: 35,\r\n\r\n                                            height: 0,\r\n                                        }}\r\n                                    >\r\n                                        <iframe\r\n                                            style={{\r\n                                                position: \"absolute\",\r\n                                                top: 0,\r\n                                                left: 0,\r\n                                                width: \"100%\",\r\n                                                height: \"100%\",\r\n                                            }}\r\n                                            src={currentFormation.link}\r\n                                            title=\"YouTube video player\"\r\n                                            frameborder=\"0\"\r\n                                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                            allowfullscreen\r\n                                        ></iframe>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <p class=\"detail\"> LIEN: <a href={currentFormation.link}>{currentFormation.link}</a></p>\r\n\r\n                            </Col>\r\n                            <Col sm={2} md={3}>\r\n\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                    </Container>\r\n\r\n                    <Container className=\"dmContainer\">\r\n                        <Row>\r\n                            <Col xs={12} sm={6} className=\"colll1\" >\r\n                                <div>\r\n                                    <div class=\"addDiv1\">\r\n                                        <a href=\"###\" onClick={() => {\r\n                                            setIsChoosed(2);\r\n                                            setNameFormationModified(currentFormation.formationName);\r\n                                            setDescriptionModified(currentFormation.description);\r\n                                            setLinkModified(currentFormation.link)\r\n                                        }} ><p class=\"add1\">Modifier</p></a>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                            <Col sm={6} className=\"colll1\" >\r\n                                <div>\r\n                                    <div class=\"addDiv1\">\r\n                                        <a href=\"###\" onClick={() => DeleteFormation()}><p class=\"add1\">Supprimer</p></a>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n    const renderScreen = () => {\r\n\r\n        return (\r\n            <div>\r\n                <Container className=\"center0\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <div ><p class=\"clientSpace\">ESPACE FORMATEUR</p></div>\r\n                            </Col>\r\n                            <Col sm={6}>\r\n                                <div class=\"Name\">NOM ET PRÉNOM : ADMIN</div>\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n\r\n                    </Container>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={8}>\r\n                                <div class=\"formationList1\"> <a class=\"retour\" href=\"###\" onClick={() => { props.setlistvalue(0); history.push('/espace-formateur') }}>\r\n                                    {\"<\"} Liste d'utilisateurs </a> <p class=\"formationList\" >\r\n                                        <a class=\"retour\" href=\"###\" onClick={() => { setIsChoosed(0) }}> Liste de formations de {name.toUpperCase()} </a></p></div>\r\n                            </Col>\r\n                            <Col sm={4} md={4}  >\r\n                                <div>\r\n                                    <div class=\"addDiv\">\r\n                                        <a href=\"/addformation\" ><p class=\"add\">Ajouter une formation</p></a>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n\r\n                    </Container>\r\n\r\n\r\n\r\n\r\n                    <div>{listFormations()}</div>\r\n                </Container>\r\n\r\n\r\n                <Container className=\"cont4\">\r\n                    <Row className=\"cont41\">\r\n                        <Col xs={12} sm={6} md={3} >\r\n                            <div class=\"col4\">\r\n                                <img src={logo} class=\"logo\" alt=\"logo\" ></img>\r\n\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm={6} md={3} >\r\n                            <div class=\"col4\">\r\n                                <p class=\"contactUs\">Nous contacter :</p>\r\n                                <Row className=\"rowIcons\">\r\n                                    <Col sm={4} xs={4}>\r\n                                        <BsGeoAlt class=\"icon\" />\r\n                                    </Col>\r\n                                    <Col sm={4} xs={4}  >\r\n                                        <FiPhoneCall class=\"icon\" />\r\n                                    </Col>\r\n                                    <Col sm={4} xs={4} >\r\n                                        <BsFillEnvelopeFill class=\"icon\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm={6} md={3}>\r\n                            <div class=\"col4\">\r\n                                <p class=\"legal\">Mentions légales</p>\r\n                                <p class=\"condition\">Confidentialité</p>\r\n                                <p class=\"condition\">Conditions Générales</p>\r\n\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm={6} md={3}>\r\n                            <div class=\"col4\">\r\n                                <p class=\"legal\">Qui sommes nous ?</p>\r\n                                <p class=\"condition\">Blog</p>\r\n                                <p class=\"condition\">Former et recruter</p>\r\n\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n            </div>\r\n        )\r\n\r\n\r\n\r\n\r\n    }\r\n    return (\r\n\r\n        <div>{renderScreen()}</div>\r\n\r\n\r\n    )\r\n\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // only map needed states here\r\n        isLoading: state.loginReducer.isLoading,\r\n        isAuth: state.loginReducer.isAuth,\r\n        errMsg: state.loginReducer.errMsg,\r\n        listvalue: state.loginReducer.listvalue,\r\n        currenttrainer: state.loginReducer.currenttrainer,\r\n        addvalue: state.loginReducer.addvalue,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // only map needed dispatches here\r\n        login: (loginData) => dispatch(login(loginData)),\r\n        setisauth: () => dispatch(setisauth()),\r\n        setisadmin: () => dispatch(setisadmin()),\r\n        setlistvalue: (value) => dispatch(setlistvalue(value)),\r\n        setaddvalue: (value) => dispatch(setaddvalue(value)),\r\n\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Listformations);","C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Components\\AddFormation.jsx",[],"C:\\Users\\Amir\\Desktop\\Nemabso\\Site-centre-formation\\frontend\\src\\Components\\Footer.jsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":8,"column":61,"nodeType":"86","endLine":8,"endColumn":88},{"ruleId":"87","severity":1,"message":"88","line":39,"column":6,"nodeType":"89","endLine":39,"endColumn":37,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":21,"column":10,"nodeType":"93","messageId":"94","endLine":21,"endColumn":21},{"ruleId":"87","severity":1,"message":"95","line":57,"column":6,"nodeType":"89","endLine":57,"endColumn":37,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":203,"column":23,"nodeType":"99","endLine":203,"endColumn":56},{"ruleId":"91","severity":1,"message":"100","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":33},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["103"],"no-unused-vars","'userDetails' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'fetchUserDetails', 'forceUpdate', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["104"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [history, props, props.isAuth, props.isLoading]",{"range":"109","text":"110"},"Update the dependencies array to be: [fetchUserDetails, forceUpdate, props, props.isAuth, props.isLoading]",{"range":"111","text":"112"},[1274,1305],"[history, props, props.isAuth, props.isLoading]",[2098,2129],"[fetchUserDetails, forceUpdate, props, props.isAuth, props.isLoading]"]